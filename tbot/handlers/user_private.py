import os


from aiogram.filters import CommandStart, Command, or_f
from aiogram import types, Router, F
from aiogram.utils.formatting import as_list, as_marked_section, Bold
from database.orm_commands import orm_get_products
from sqlalchemy.ext.asyncio import AsyncSession


user_private_router = Router()
from keyboards import user_keyboard, admin_keyboard

@user_private_router.message(CommandStart())
@user_private_router.message(or_f(Command('about'), (F.text == '–û –Ω–∞—Å')))
async def get_cmd(message: types.Message):
    text = as_list(
        as_marked_section(
        Bold('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ SushiBooba!!!'),
        '–ó–∞–∫–∞–∑—ã–≤–∞–π—Ç–µ —Å—É—à–∏ –æ–Ω–ª–∞–π–Ω –∏ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –∏–º–∏ –¥–æ–º–∞',
        '–ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞',
        '–¢–æ–ª—å–∫–æ —Å–≤–µ–∂–∏–µ –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã',
        '–†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ –º–µ–Ω—é - –±–æ–ª—å—à–æ–π –≤—ã–±–æ—Ä —Ä–æ–ª–ª–æ–≤, —Å—É—à–∏',
        marker='üí•'
    ),
        as_marked_section(
            Bold('–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã'),
            '–ü–Ω-–ü—Ç: 10:00-21:00',
            '–°–±-–í—Å: 10:00-20:00',
            marker='‚åö'
        ),
        sep='\n------------------------------\n'
    )
    if message.from_user.id == int(os.getenv('ADMIN_ID')):
        await message.answer(text.as_html(), 
                         reply_markup=admin_keyboard.add_admin_button.as_markup(resize_keyboard=True))
    else:
        await message.answer(text.as_html(), 
                         reply_markup=user_keyboard.start_keyboard.as_markup(resize_keyboard=True))

@user_private_router.message(or_f(Command('menu'), (F.text == '–ú–µ–Ω—é')))
async def get_message(message: types.Message, session: AsyncSession):
    for product in await orm_get_products(session):
        await message.answer_photo(
            product.img,
            caption=f"<strong>{product.name}\
                </strong>\n–û —Ç–æ–≤–∞—Ä–µ:{product.description}\n–¶–µ–Ω–∞:{round(product.price, 2)}"
        )

@user_private_router.message(or_f(Command('delivery'), (F.text == '–°–ø–æ—Å–æ–±—ã –ø–æ–ª—É—á–µ–Ω–∏—è')))
async def get_delivery(message: types.Message):
    text = as_marked_section(
        Bold('–°–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è'),
        '–°–∞–º–æ–≤—ã–≤–æ–∑',
        '–î–æ—Å—Ç–∞–≤–∫–∞ –∫—É—Ä—å–µ—Ä–æ–º',
        marker='‚úÖ'
    )
    await message.answer(text.as_html())

@user_private_router.message(or_f(Command('contact'), (F.text == '–ö–æ–Ω—Ç–∞–∫—Ç—ã')))
async def get_contact(message: types.Message):
    text = as_list(
        as_marked_section(
            Bold('–ú—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è'),
            '–í–æ–ª–≥–æ–≥—Ä–∞–¥, –ø—Ä. –∏–º–µ–Ω–∏ –í.–ò. –õ–µ–Ω–∏–Ω–∞, 28',
            '–í–æ–ª–≥–æ–≥—Ä–∞–¥, –†–∞–±–æ—á–µ-–ö—Ä–µ—Å—Ç—å—è–Ω—Å–∫–∞—è —É–ª., 9 –ë',
            marker='üü¢'
        ),
        as_marked_section(
            Bold('–ö–æ–Ω—Ç–∞–∫—Ç—ã'),
            '8(995)423-27-47',
            '8(909)048-07-32',
            marker='üì±'
        ),
        sep='\n------------------------------\n'
    )
    await message.answer(text.as_html())

@user_private_router.message(F.text.lower() == 'id')
async def get_id(message: types.Message):
    await message.answer(f'{message.from_user.id}')